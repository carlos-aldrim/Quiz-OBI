[
  {
    "pergunta": "Qual é a complexidade do algoritmo de busca binária em um vetor ordenado?",
    "alternativas": ["O(n)", "O(log n)", "O(n log n)", "O(1)"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Busca Binária e Complexidade"
  },
  {
    "pergunta": "Em qual situação o uso de recursão é mais indicado?",
    "alternativas": [
      "Para problemas iterativos simples",
      "Para problemas que podem ser divididos em subproblemas menores",
      "Para cálculos aritméticos simples",
      "Para manipulação de arrays"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Recursão e Divisão de Problemas"
  },
  {
    "pergunta": "Qual das estruturas de dados a seguir funciona no modelo LIFO?",
    "alternativas": ["Fila", "Pilha", "Árvore", "Fila de Prioridade"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Pilha"
  },
  {
    "pergunta": "Como se define a complexidade de tempo de um algoritmo?",
    "alternativas": [
      "Como uma medida da quantidade de memória utilizada",
      "Como uma medida do número de operações executadas em função do tamanho da entrada",
      "Como o tempo de espera do usuário",
      "Como a velocidade do processador utilizado"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Complexidade de Tempo"
  },
  {
    "pergunta": "Qual a principal característica de um algoritmo recursivo?",
    "alternativas": [
      "Chamar a si mesmo para resolver subproblemas",
      "Utilizar laços de repetição para iterar sobre dados",
      "Dependência exclusiva de estruturas de dados iterativas",
      "Resolver problemas sem subdividi-los"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Recursão"
  },
  {
    "pergunta": "Em programação, o que define uma estrutura de controle condicional?",
    "alternativas": [
      "Uma estrutura que permite a repetição de instruções",
      "Uma estrutura que permite escolher entre diferentes caminhos de execução",
      "Uma estrutura para organizar dados em listas",
      "Nenhuma das anteriores"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Estruturas de Controle de Fluxo"
  },
  {
    "pergunta": "Em qual técnica de programação a abordagem 'dividir para conquistar' se encaixa?",
    "alternativas": ["Programação Dinâmica", "Backtracking", "Recursão", "Iteração"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Divisão e Conquista"
  },
  {
    "pergunta": "Qual é a principal característica de uma estrutura de dados do tipo fila?",
    "alternativas": ["Acesso aleatório", "Modelo LIFO", "Modelo FIFO", "Acesso hierárquico"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Fila"
  },
  {
    "pergunta": "Em programação, o que é um ponteiro?",
    "alternativas": [
      "Uma variável que armazena o endereço de memória de outra variável",
      "Uma função que aponta para um bloco de código",
      "Um tipo de estrutura de dados",
      "Uma operação aritmética"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Conceitos de Programação e Memória"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo Bubble Sort no pior caso?",
    "alternativas": ["O(n)", "O(n log n)", "O(n²)", "O(1)"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Algoritmos de Ordenação e Análise de Complexidade"
  },
  {
    "pergunta": "Qual das seguintes estruturas de dados permite acesso rápido a elementos através de uma chave única?",
    "alternativas": [
      "Lista Encadeada",
      "Árvore Binária",
      "Tabela Hash",
      "Fila"
    ],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Tabela Hash"
  },
  {
    "pergunta": "Qual das alternativas representa um caso de algoritmo recursivo com recursão infinita se não houver condição de parada?",
    "alternativas": [
      "Um algoritmo que chama a si mesmo sem um caso base definido",
      "Um algoritmo que utiliza laços de repetição",
      "Um algoritmo que divide o problema em subproblemas menores",
      "Um algoritmo que utiliza programação dinâmica"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Recursão e Controle de Fluxo"
  },
  {
    "pergunta": "Qual é a função da operação 'push' em uma pilha?",
    "alternativas": [
      "Remover o elemento do topo da pilha",
      "Adicionar um elemento no final da fila",
      "Adicionar um elemento no topo da pilha",
      "Ordenar os elementos da pilha"
    ],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Pilha"
  },
  {
    "pergunta": "Qual das estruturas de dados a seguir permite acesso sequencial eficiente, mas não permite acesso aleatório eficiente?",
    "alternativas": ["Array", "Lista Encadeada", "Tabela Hash", "Árvore Binária"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Listas Encadeadas"
  },
  {
    "pergunta": "Qual é o principal objetivo da análise de complexidade de um algoritmo?",
    "alternativas": [
      "Determinar o consumo de memória do algoritmo",
      "Determinar o número de operações realizadas em função do tamanho da entrada",
      "Determinar a velocidade do processador necessário",
      "Determinar a linguagem de programação mais adequada"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos"
  },
  {
    "pergunta": "Qual dos seguintes algoritmos é usado para busca em profundidade em um grafo?",
    "alternativas": [
      "Algoritmo de Dijkstra",
      "Busca em Profundidade (DFS)",
      "Busca em Largura (BFS)",
      "Algoritmo de Kruskal"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Busca em Profundidade"
  },
  {
    "pergunta": "Qual conceito descreve a propriedade de um algoritmo de sempre terminar após um número finito de passos?",
    "alternativas": [
      "Corretude",
      "Exaustividade",
      "Terminabilidade",
      "Recursividade"
    ],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Conceitos de Algoritmos"
  },
  {
    "pergunta": "Qual das seguintes alternativas melhor descreve o algoritmo de busca linear?",
    "alternativas": [
      "Busca por um elemento em um vetor ordenado utilizando divisão",
      "Percorre cada elemento de um vetor até encontrar o elemento desejado",
      "Ordena o vetor e realiza busca binária",
      "Utiliza hashing para encontrar o elemento"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Algoritmos de Busca – Busca Linear"
  },
  {
    "pergunta": "Qual conceito é fundamental para garantir que um algoritmo recursivo não entre em um loop infinito?",
    "alternativas": [
      "Condição de parada",
      "Laço de repetição",
      "Uso de memória dinâmica",
      "Algoritmo guloso"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Recursão"
  },
  {
    "pergunta": "Em estrutura de dados, qual é a complexidade de inserção em uma Tabela Hash, em média?",
    "alternativas": ["O(1)", "O(n)", "O(log n)", "O(n log n)"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Estruturas de Dados – Tabela Hash"
  },
  {
    "pergunta": "Qual conceito está associado ao 'princípio da indução' em matemática, frequentemente utilizado para provar propriedades de algoritmos recursivos?",
    "alternativas": [
      "Princípio da Contagem",
      "Princípio da Substituição",
      "Princípio da Indução Matemática",
      "Princípio do Pigeonhole"
    ],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Matemática Discreta e Prova por Indução"
  },
  {
    "pergunta": "Qual das seguintes estruturas é ideal para implementar um algoritmo de 'busca binária'?",
    "alternativas": ["Array ordenado", "Lista encadeada", "Tabela Hash", "Grafo"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Estruturas de Dados e Algoritmos de Busca"
  },
  {
    "pergunta": "Qual dos seguintes problemas pode ser resolvido usando a técnica de 'força bruta' de forma exaustiva?",
    "alternativas": [
      "Encontrar o menor elemento em um vetor",
      "Ordenar um vetor de números",
      "Encontrar todas as combinações possíveis de uma sequência",
      "Calcular a média de uma lista de números"
    ],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Técnicas de Algoritmos – Força Bruta"
  },
  {
    "pergunta": "Qual a saída do comando console.log('Olá, Mundo!') em JavaScript?",
    "alternativas": ["Olá, Mundo!", "olá, mundo!", "Erro", "undefined"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Conceitos Básicos de Programação"
  },
  {
    "pergunta": "Qual é o operador utilizado para atribuição em muitas linguagens de programação?",
    "alternativas": ["==", "=", "===", "!="],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Sintaxe de Programação"
  },
  {
    "pergunta": "Em HTML, qual tag é usada para criar um parágrafo?",
    "alternativas": ["<div>", "<p>", "<h1>", "<span>"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Desenvolvimento Web"
  },
  {
    "pergunta": "O que significa a sigla CSS?",
    "alternativas": [
      "Cascading Style Sheets",
      "Computer Style Sheet",
      "Creative Style System",
      "Colorful Style Sheets"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Desenvolvimento Web"
  },
  {
    "pergunta": "Qual linguagem é conhecida por sua simplicidade e é frequentemente usada para ensinar programação?",
    "alternativas": ["Java", "Python", "C++", "Assembly"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Linguagens de Programação"
  },
  {
    "pergunta": "Qual comando SQL é utilizado para selecionar dados de uma tabela?",
    "alternativas": ["SELECT", "INSERT", "UPDATE", "DELETE"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Bancos de Dados"
  },
  {
    "pergunta": "Em programação, o que é um loop?",
    "alternativas": [
      "Uma estrutura de decisão",
      "Uma estrutura de repetição",
      "Uma função",
      "Uma variável"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Estruturas de Controle"
  },
  {
    "pergunta": "Qual método é utilizado para adicionar um elemento no final de um array em JavaScript?",
    "alternativas": ["pop()", "shift()", "push()", "unshift()"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Manipulação de Arrays"
  },
  {
    "pergunta": "O que significa a sigla API?",
    "alternativas": [
      "Application Programming Interface",
      "Advanced Programming Interface",
      "Application Protocol Interface",
      "Advanced Protocol Interface"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Desenvolvimento de Software"
  },
  {
    "pergunta": "Qual comando é usado para comentar uma linha em JavaScript?",
    "alternativas": ["//", "/*", "#", "<!--"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Sintaxe de Programação"
  },
  {
    "pergunta": "Qual linguagem é amplamente usada para desenvolvimento web no lado do servidor?",
    "alternativas": ["HTML", "JavaScript", "PHP", "CSS"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Desenvolvimento Web"
  },
  {
    "pergunta": "Em lógica booleana, qual valor representa 'falso'?",
    "alternativas": ["true", "false", "0", "1"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Lógica de Programação"
  },
  {
    "pergunta": "Qual é o resultado de 2 + 2 em operações aritméticas básicas?",
    "alternativas": ["3", "4", "22", "5"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Matemática Básica"
  },
  {
    "pergunta": "Em JavaScript, qual função converte uma string para inteiro?",
    "alternativas": ["parseInt()", "toString()", "Number()", "parseFloat()"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Manipulação de Dados"
  },
  {
    "pergunta": "Qual é o símbolo usado para comentar uma linha em Python?",
    "alternativas": ["//", "#", "/*", "%"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Sintaxe de Programação"
  },
  {
    "pergunta": "O que é uma variável em programação?",
    "alternativas": [
      "Um espaço para armazenar dados",
      "Uma função",
      "Um tipo de loop",
      "Um operador"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Conceitos Básicos de Programação"
  },
  {
    "pergunta": "Qual dos seguintes não é um tipo de dado primitivo em muitas linguagens?",
    "alternativas": ["Inteiro", "Booleano", "String", "Array"],
    "dificuldade": "Fácil",
    "resposta": "4",
    "competencia": "Conceitos de Programação"
  },
  {
    "pergunta": "Qual comando é utilizado para criar uma nova pasta no terminal Linux?",
    "alternativas": ["mkdir", "rmdir", "touch", "ls"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Sistemas Operacionais"
  },
  {
    "pergunta": "Em sistemas operacionais, qual comando é usado para listar arquivos em um diretório no Linux?",
    "alternativas": ["dir", "list", "ls", "show"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Sistemas Operacionais"
  },
  {
    "pergunta": "Qual é a extensão padrão para arquivos de estilo em CSS?",
    "alternativas": [".css", ".js", ".html", ".txt"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Desenvolvimento Web"
  },
  {
    "pergunta": "Em JavaScript, qual é o tipo de dado retornado pelo operador typeof?",
    "alternativas": ["String", "Objeto", "Número", "Indeterminado"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "JavaScript"
  },
  {
    "pergunta": "Em HTML, qual tag é usada para inserir uma imagem?",
    "alternativas": ["<img>", "<picture>", "<src>", "<image>"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Desenvolvimento Web"
  },
  {
    "pergunta": "Qual é o método para converter um objeto JavaScript em uma string JSON?",
    "alternativas": ["JSON.parse()", "JSON.stringify()", "toString()", "objectToJson()"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "JavaScript"
  },
  {
    "pergunta": "Qual é o principal propósito de um firewall em redes de computadores?",
    "alternativas": [
      "Aumentar a velocidade da internet",
      "Bloquear acessos não autorizados",
      "Armazenar dados",
      "Executar programas"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Redes de Computadores"
  },
  {
    "pergunta": "Em programação, o que é um algoritmo?",
    "alternativas": [
      "Uma sequência de instruções",
      "Um tipo de dado",
      "Uma linguagem de programação",
      "Um hardware"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Conceitos de Programação"
  },
  {
    "pergunta": "Qual é a saída de 5 % 2 (módulo)?",
    "alternativas": ["1", "2", "0", "5"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Matemática para Programação"
  },
  {
    "pergunta": "Qual símbolo é usado para concatenação de strings em JavaScript?",
    "alternativas": ["+", "&", ".", "*"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Manipulação de Strings"
  },
  {
    "pergunta": "Em Python, qual palavra-chave é usada para iniciar uma função?",
    "alternativas": ["def", "func", "function", "lambda"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Python"
  },
  {
    "pergunta": "Em programação orientada a objetos, o que é uma classe?",
    "alternativas": [
      "Uma instância de um objeto",
      "Um molde para criar objetos",
      "Uma função",
      "Uma variável"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação Orientada a Objetos"
  },
  {
    "pergunta": "Qual é o comando para instalar pacotes no Node.js usando npm?",
    "alternativas": ["install", "npm install", "node install", "package install"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Desenvolvimento de Software"
  },
  {
    "pergunta": "Em SQL, qual comando é usado para remover uma tabela?",
    "alternativas": ["DELETE", "DROP", "REMOVE", "ERASE"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Bancos de Dados"
  },
  {
    "pergunta": "Qual é o operador lógico que representa 'E' em muitas linguagens de programação?",
    "alternativas": ["||", "&&", "==", "++"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Lógica de Programação"
  },
  {
    "pergunta": "Em Java, qual palavra-chave é usada para criar uma nova instância de uma classe?",
    "alternativas": ["new", "create", "instance", "object"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Programação Orientada a Objetos"
  },
  {
    "pergunta": "Qual estrutura de controle é usada para executar um bloco de código repetidamente enquanto uma condição for verdadeira?",
    "alternativas": ["if", "switch", "while", "try"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Estruturas de Controle"
  },
  {
    "pergunta": "Em C, qual função é usada para imprimir na tela?",
    "alternativas": ["print()", "echo()", "printf()", "console.log()"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Linguagens de Programação"
  },
  {
    "pergunta": "Qual protocolo é utilizado para enviar e-mails na Internet?",
    "alternativas": ["HTTP", "FTP", "SMTP", "SSH"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Redes de Computadores"
  },
  {
    "pergunta": "Em JavaScript, qual método remove o primeiro elemento de um array?",
    "alternativas": ["pop()", "shift()", "unshift()", "splice()"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Manipulação de Arrays"
  },
  {
    "pergunta": "Qual algoritmo de ordenação costuma apresentar melhor desempenho Média para vetores aleatórios?",
    "alternativas": ["Bubble Sort", "Quick Sort", "Insertion Sort", "Selection Sort"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos de Ordenação"
  },
  {
    "pergunta": "Em teoria dos grafos, o que caracteriza um ciclo?",
    "alternativas": [
      "Um caminho que começa e termina no mesmo vértice",
      "Um caminho sem repetições de vértices",
      "Um caminho que passa por todas as arestas",
      "Um caminho que nunca se repete"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Teoria dos Grafos"
  },
  {
    "pergunta": "Qual técnica é utilizada para otimizar algoritmos recursivos que possuem subproblemas repetidos?",
    "alternativas": [
      "Backtracking",
      "Programação Dinâmica",
      "Divisão e Conquista",
      "Força Bruta"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação Dinâmica"
  },
  {
    "pergunta": "Qual é a principal vantagem do uso da técnica de divisão e conquista?",
    "alternativas": [
      "Redução do espaço de memória utilizado",
      "Simplicidade na implementação",
      "Facilidade para paralelizar o processamento",
      "Resolução de problemas grandes dividindo-os em subproblemas menores"
    ],
    "dificuldade": "Média",
    "resposta": "4",
    "competencia": "Divisão e Conquista"
  },
  {
    "pergunta": "Qual algoritmo é utilizado para encontrar o menor caminho em um grafo com arestas de peso não negativo?",
    "alternativas": ["Bellman-Ford", "Floyd-Warshall", "Dijkstra", "Kruskal"],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Teoria dos Grafos – Caminho Mínimo"
  },
  {
    "pergunta": "Qual estrutura de dados é ideal para implementar uma agenda de contatos onde a busca é feita por nomes ordenados?",
    "alternativas": [
      "Fila",
      "Pilha",
      "Árvore Binária de Busca",
      "Lista Encadeada"
    ],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Árvores de Busca"
  },
  {
    "pergunta": "Qual técnica é utilizada para resolver problemas de contagem onde o resultado depende de subproblemas menores, como o cálculo de combinações?",
    "alternativas": ["Recursão", "Programação Dinâmica", "Divisão e Conquista", "Força Bruta"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação Dinâmica e Combinatória"
  },
  {
    "pergunta": "Qual dos seguintes algoritmos é usado para busca em profundidade em um grafo?",
    "alternativas": [
      "Algoritmo de Dijkstra",
      "Busca em Profundidade (DFS)",
      "Busca em Largura (BFS)",
      "Algoritmo de Kruskal"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Busca em Profundidade"
  },
  {
    "pergunta": "Em qual situação a recursão é considerada ineficiente?",
    "alternativas": [
      "Quando o problema é pequeno e simples",
      "Quando o problema possui muitas chamadas recursivas profundas, levando a um estouro de pilha",
      "Quando o problema pode ser dividido em subproblemas independentes",
      "Quando o problema envolve operações aritméticas"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Recursão e Eficiência Computacional"
  },
  {
    "pergunta": "Qual algoritmo é utilizado para a ordenação de uma lista ligada de forma eficiente, aproveitando sua estrutura?",
    "alternativas": [
      "Insertion Sort",
      "Quick Sort",
      "Merge Sort",
      "Bubble Sort"
    ],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Algoritmos de Ordenação – Merge Sort"
  },
  {
    "pergunta": "Em problemas de programação competitiva, qual é a importância da otimização de código?",
    "alternativas": [
      "Para reduzir o tempo de desenvolvimento",
      "Para garantir que o algoritmo seja executado dentro dos limites de tempo e memória",
      "Para aumentar a complexidade do algoritmo",
      "Para facilitar a leitura do código"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Otimização de Algoritmos"
  },
  {
    "pergunta": "Qual dos seguintes problemas é clássico em competições de programação e pode ser resolvido com programação dinâmica?",
    "alternativas": [
      "Problema do Caixeiro Viajante",
      "Problema da Soma Máxima",
      "Problema da Ordenação",
      "Problema do Caminho Mínimo"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação Dinâmica"
  },
  {
    "pergunta": "Em estruturas de dados, o que caracteriza uma árvore binária balanceada?",
    "alternativas": [
      "Todos os nós têm dois filhos",
      "A diferença de altura entre as subárvores de qualquer nó é no máximo 1",
      "Os nós estão armazenados em ordem alfabética",
      "A árvore é construída de forma recursiva"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Árvores Binárias"
  },
  {
    "pergunta": "Qual é a abordagem principal do algoritmo de ordenação Quick Sort?",
    "alternativas": [
      "Dividir o vetor em duas partes ao redor de um pivô e ordenar recursivamente",
      "Comparar elementos adjacentes e trocá-los de posição",
      "Combinar subvetores ordenados",
      "Construir uma árvore binária e percorrê-la"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Algoritmos de Ordenação – Quick Sort"
  },
  {
    "pergunta": "Qual algoritmo é utilizado para encontrar a ordenação topológica de um grafo dirigido acíclico (DAG)?",
    "alternativas": [
      "Busca em Profundidade (DFS)",
      "Busca em Largura (BFS)",
      "Dijkstra",
      "Kruskal"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Teoria dos Grafos – Ordenação Topológica"
  },
  {
    "pergunta": "Em problemas de programação, o que caracteriza um algoritmo 'guloso'?",
    "alternativas": [
      "Faz escolhas ótimas locais com a esperança de encontrar a solução global",
      "Utiliza recursão para dividir o problema em subproblemas",
      "Testa todas as combinações possíveis para encontrar a melhor solução",
      "Utiliza memória extra para armazenar subresultados"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Algoritmos Gulosos"
  },
  {
    "pergunta": "Qual técnica é comumente utilizada para resolver problemas de labirinto, encontrando um caminho da entrada à saída?",
    "alternativas": [
      "Busca em Largura (BFS)",
      "Busca em Profundidade (DFS)",
      "Algoritmo de Dijkstra",
      "Algoritmo A*"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Algoritmos de Busca em Grafos"
  },
  {
    "pergunta": "Qual método de ordenação é estável e utiliza a técnica de 'merge'?",
    "alternativas": ["Quick Sort", "Merge Sort", "Heap Sort", "Shell Sort"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos de Ordenação"
  },
  {
    "pergunta": "Em programação dinâmica, qual característica é essencial para a técnica funcionar?",
    "alternativas": [
      "Subproblemas independentes",
      "Subproblemas sobrepostos",
      "Divisão exata",
      "Recursão sem memoization"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação Dinâmica"
  },
  {
    "pergunta": "Qual dos seguintes algoritmos é baseado na técnica de 'divide e conquista'?",
    "alternativas": ["Insertion Sort", "Merge Sort", "Bubble Sort", "Selection Sort"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos de Ordenação"
  },
  {
    "pergunta": "Em um grafo, qual algoritmo é utilizado para encontrar componentes fortemente conexas?",
    "alternativas": ["Kruskal", "Tarjan", "Prim", "Dijkstra"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo de busca linear?",
    "alternativas": ["O(1)", "O(n)", "O(log n)", "O(n²)"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos de Busca"
  },
  {
    "pergunta": "Na análise de algoritmos, o que representa a notação Big-O?",
    "alternativas": [
      "Melhor caso",
      "Caso médio",
      "Pior caso",
      "Espaço de memória"
    ],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Análise de Algoritmos"
  },
  {
    "pergunta": "Qual é a principal diferença entre recursão e iteração?",
    "alternativas": [
      "Recursão usa chamadas de função, iteração usa loops",
      "Recursão é mais rápida",
      "Iteração usa mais memória",
      "Não há diferença"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Recursão e Iteração"
  },
  {
    "pergunta": "Qual a complexidade média do algoritmo de Quick Sort?",
    "alternativas": ["O(n)", "O(n log n)", "O(n²)", "O(log n)"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos de Ordenação"
  },
  {
    "pergunta": "Em programação dinâmica, qual característica é essencial para a técnica funcionar?",
    "alternativas": [
      "Subproblemas independentes",
      "Subproblemas sobrepostos",
      "Divisão exata",
      "Recursão sem memoization"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação Dinâmica"
  },
  {
    "pergunta": "Qual dos seguintes algoritmos é baseado na técnica de 'divide e conquista'?",
    "alternativas": ["Insertion Sort", "Merge Sort", "Bubble Sort", "Selection Sort"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos de Ordenação"
  },
  {
    "pergunta": "Em um grafo, qual algoritmo é utilizado para encontrar componentes fortemente conexas?",
    "alternativas": ["Kruskal", "Tarjan", "Prim", "Dijkstra"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo de busca linear?",
    "alternativas": ["O(1)", "O(n)", "O(log n)", "O(n²)"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos de Busca"
  },
  {
    "pergunta": "Na análise de algoritmos, o que representa a notação Big-O?",
    "alternativas": [
      "Melhor caso",
      "Caso médio",
      "Pior caso",
      "Espaço de memória"
    ],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Análise de Algoritmos"
  },
  {
    "pergunta": "Qual é a principal diferença entre recursão e iteração?",
    "alternativas": [
      "Recursão usa chamadas de função, iteração usa loops",
      "Recursão é mais rápida",
      "Iteração usa mais memória",
      "Não há diferença"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Recursão e Iteração"
  },
  {
    "pergunta": "Em estruturas de dados, qual operação em uma fila tem complexidade O(1)?",
    "alternativas": ["Inserção", "Busca", "Ordenação", "Busca binária"],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Estruturas de Dados – Fila"
  },
  {
    "pergunta": "Qual método de ordenação é estável e utiliza a técnica de 'merge'?",
    "alternativas": ["Quick Sort", "Merge Sort", "Heap Sort", "Shell Sort"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos de Ordenação"
  },
  {
    "pergunta": "Em um algoritmo de busca binária, qual é o pré-requisito para o vetor?",
    "alternativas": ["Estar ordenado", "Ser aleatório", "Ter números pares", "Conter somente inteiros"],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Algoritmos de Busca"
  },
  {
    "pergunta": "Qual algoritmo é utilizado para encontrar a menor árvore geradora em um grafo?",
    "alternativas": ["Kruskal", "Dijkstra", "Bellman-Ford", "Floyd-Warshall"],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Teoria dos Grafos"
  },
  {
    "pergunta": "Na programação orientada a objetos, o que é herança?",
    "alternativas": [
      "Criação de novos métodos",
      "Compartilhamento de atributos e métodos entre classes",
      "Encapsulamento de dados",
      "Uso de variáveis globais"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação Orientada a Objetos"
  },
  {
    "pergunta": "Em análise de complexidade, o que significa O(n log n)?",
    "alternativas": [
      "Crescimento linear",
      "Crescimento logarítmico",
      "Crescimento quase linear",
      "Crescimento exponencial"
    ],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Análise de Algoritmos"
  },
  {
    "pergunta": "Qual é a complexidade de tempo no pior caso para o algoritmo de ordenação Heap Sort?",
    "alternativas": ["O(n)", "O(n log n)", "O(n²)", "O(log n)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Algoritmos de Ordenação – Heap Sort"
  },
  {
    "pergunta": "Em algoritmos de programação dinâmica, como se chama a técnica que armazena resultados intermediários para evitar cálculos repetitivos?",
    "alternativas": ["Memoization", "Backtracking", "Divisão e Conquista", "Recursão"],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Programação Dinâmica"
  },
  {
    "pergunta": "Qual é a complexidade de tempo do algoritmo de Dijkstra utilizando uma fila de prioridade?",
    "alternativas": ["O(V²)", "O(V log V + E)", "O(E log V)", "O(V+E)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Caminho Mínimo"
  },
  {
    "pergunta": "Em problemas NP-completos, qual é a característica principal?",
    "alternativas": [
      "Possuem solução polinomial conhecida",
      "Nenhuma solução exata existe",
      "Não podem ser resolvidos por algoritmos de força bruta",
      "A solução pode ser verificada em tempo polinomial"
    ],
    "dificuldade": "Difícil",
    "resposta": "4",
    "competencia": "Complexidade Computacional"
  },
  {
    "pergunta": "Qual algoritmo é utilizado para encontrar o maior subarray de soma máxima?",
    "alternativas": ["Divide and Conquer", "Kadane's Algorithm", "Merge Sort", "Quick Sort"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Algoritmos de Programação"
  },
  {
    "pergunta": "Em árvores binárias, o que caracteriza uma árvore AVL?",
    "alternativas": [
      "Estrutura não balanceada",
      "Árvore de busca binária com balanceamento automático",
      "Árvore onde todos os nós têm dois filhos",
      "Árvore com complexidade O(n) na busca"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Árvores Balanceadas"
  },
  {
    "pergunta": "Qual é o problema clássico que pode ser resolvido com o algoritmo de 'backtracking' e envolve colocar N rainhas em um tabuleiro?",
    "alternativas": [
      "Problema das Torres de Hanói",
      "Problema das N rainhas",
      "Problema do Caixeiro Viajante",
      "Problema da Mochila"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Algoritmos – Problemas Clássicos"
  },
  {
    "pergunta": "No contexto de grafos, o que é um grafo euleriano?",
    "alternativas": [
      "Um grafo que possui um ciclo que passa por todas as arestas exatamente uma vez",
      "Um grafo que possui um caminho que passa por todos os vértices",
      "Um grafo que é totalmente conectado",
      "Um grafo sem ciclos"
    ],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Teoria dos Grafos"
  },
  {
    "pergunta": "Em programação concorrente, o que é uma condição de corrida (race condition)?",
    "alternativas": [
      "Uma situação em que o resultado depende da ordem das operações de threads",
      "Uma técnica de ordenação",
      "Um tipo de algoritmo recursivo",
      "Um erro de sintaxe"
    ],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Programação Concorrente"
  },
  {
    "pergunta": "Qual é o tempo de execução do algoritmo Merge Sort no pior caso?",
    "alternativas": ["O(n)", "O(n log n)", "O(n²)", "O(log n)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Algoritmos de Ordenação – Merge Sort"
  },
  {
    "pergunta": "Em análise de algoritmos, qual é o significado de 'notação Θ'?",
    "alternativas": [
      "Limite superior",
      "Limite inferior",
      "Limite assintótico exato",
      "Complexidade de espaço"
    ],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Análise de Algoritmos"
  },
  {
    "pergunta": "Qual dos seguintes problemas é considerado NP-completo?",
    "alternativas": [
      "Problema do Caminho Mínimo",
      "Problema das N rainhas",
      "Problema da Satisfatibilidade Booleana (SAT)",
      "Ordenação de Números"
    ],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Complexidade Computacional"
  },
  {
    "pergunta": "Em estruturas de dados, qual é a complexidade de busca em uma Árvore Binária de Busca (BST) balanceada?",
    "alternativas": ["O(1)", "O(n)", "O(log n)", "O(n log n)"],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Árvores de Busca"
  },
  {
    "pergunta": "No contexto de bancos de dados, o que é normalização?",
    "alternativas": [
      "O processo de aumentar a redundância dos dados",
      "O processo de eliminar redundâncias e dependências",
      "A técnica de compactação de dados",
      "A criação de índices"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Bancos de Dados"
  },
  {
    "pergunta": "Qual técnica é utilizada para resolver problemas de caminho mínimo em grafos com pesos negativos, mas sem ciclos negativos?",
    "alternativas": ["Dijkstra", "Bellman-Ford", "Floyd-Warshall", "Kruskal"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Teoria dos Grafos"
  },
  {
    "pergunta": "Em algoritmos de busca, qual estrutura de dados é geralmente usada para implementar a busca em profundidade (DFS)?",
    "alternativas": ["Fila", "Pilha", "Árvore", "Grafo"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Busca"
  },
  {
    "pergunta": "Qual é a principal característica de um algoritmo 'greedy' (guloso)?",
    "alternativas": [
      "Sempre encontra a solução ótima global",
      "Faz escolhas locais que parecem ótimas",
      "Utiliza backtracking para corrigir erros",
      "Divide o problema em subproblemas independentes"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Algoritmos Gulosos"
  },
  {
    "pergunta": "Em programação, o que é uma 'closure' em linguagens como JavaScript?",
    "alternativas": [
      "Uma função dentro de uma função que mantém acesso ao escopo externo",
      "Um método para fechar arquivos",
      "Uma técnica de encapsulamento de dados",
      "Um tipo de loop"
    ],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Conceitos Avançados de Programação"
  },
  {
    "pergunta": "Qual é o principal desafio na implementação de algoritmos paralelos?",
    "alternativas": [
      "Sincronização entre processos",
      "Velocidade de execução",
      "Facilidade de escrita",
      "Uso de memória"
    ],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Computação Paralela"
  },
  {
    "pergunta": "No contexto de análise de algoritmos, o que representa a notação Omega (Ω)?",
    "alternativas": [
      "Limite superior da complexidade",
      "Limite inferior da complexidade",
      "Limite exato da complexidade",
      "Complexidade de espaço"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos"
  },
  {
    "pergunta": "Qual é a principal vantagem da busca em largura (BFS) sobre a busca em profundidade (DFS) em um grafo?",
    "alternativas": [
      "BFS consome menos memória que DFS",
      "BFS encontra o caminho mais curto em um grafo não ponderado",
      "DFS encontra sempre o caminho ótimo",
      "BFS pode ser implementado recursivamente"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – BFS e DFS"
  },
  {
    "pergunta": "Dado um problema de programação dinâmica com subproblemas sobrepostos e ótima subestrutura, qual técnica pode ser usada para melhorar a eficiência?",
    "alternativas": [
      "Força bruta",
      "Memorização (memoization)",
      "Divisão e conquista",
      "Heurísticas"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Programação Dinâmica – Otimização"
  },
  {
    "pergunta": "Qual é o princípio básico do algoritmo de Dijkstra para encontrar o caminho mínimo?",
    "alternativas": [
      "Exploração em profundidade do grafo",
      "Uso de programação dinâmica para armazenar caminhos",
      "Uso de uma fila de prioridade para sempre expandir o nó com menor custo acumulado",
      "Marcação aleatória de caminhos até encontrar o menor"
    ],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Teoria dos Grafos – Algoritmo de Dijkstra"
  },
  {
    "pergunta": "Qual estrutura de dados segue o modelo FIFO?",
    "alternativas": ["Pilha", "Fila", "Árvore", "Grafo"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Fila"
  },
  {
    "pergunta": "Qual é a saída do código: print(2+3*4) em Python?",
    "alternativas": ["14", "20", "24", "12"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Programação – Prioridade de Operações"
  },
  {
    "pergunta": "Qual a principal característica de um loop for?",
    "alternativas": [
      "Repete um bloco de código enquanto uma condição é verdadeira",
      "Itera sobre elementos de uma coleção",
      "Executa um bloco de código pelo menos uma vez",
      "É sempre infinito"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Lógica de Programação – Estruturas de Repetição"
  },
  {
    "pergunta": "Qual comando em Python é usado para saída de dados?",
    "alternativas": ["input()", "print()", "output()", "echo()"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Entrada e Saída"
  },
  {
    "pergunta": "Qual é o valor lógico de 'True' em Python?",
    "alternativas": ["0", "1", "True", "False"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Lógica de Programação – Booleanos"
  },
  {
    "pergunta": "Em qual situação se utiliza a estrutura condicional 'if'?",
    "alternativas": [
      "Quando há necessidade de repetição",
      "Para tomada de decisão",
      "Para armazenamento de dados",
      "Para manipulação de arquivos"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Lógica de Programação – Condicionais"
  },
  {
    "pergunta": "Qual é o resultado de 3 elevado a 2?",
    "alternativas": ["5", "6", "9", "8"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Matemática Computacional – Potenciação"
  },
  {
    "pergunta": "Qual é a função da variável em um programa?",
    "alternativas": [
      "Armazenar dados temporariamente",
      "Realizar cálculos matemáticos",
      "Controlar o fluxo do programa",
      "Gerenciar a memória do computador"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Programação – Variáveis"
  },
  {
    "pergunta": "Qual é o símbolo de atribuição em muitas linguagens de programação?",
    "alternativas": ["==", "=", "<-", ":="],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Atribuição"
  },
  {
    "pergunta": "Qual estrutura é comumente usada para armazenar uma sequência de elementos em Python?",
    "alternativas": ["dicionário", "lista", "tupla", "conjunto"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Listas"
  },
  {
    "pergunta": "Qual método é utilizado para adicionar um elemento ao final de uma lista em Python?",
    "alternativas": ["add()", "append()", "insert()", "extend()"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Métodos de Lista"
  },
  {
    "pergunta": "Em um vetor ordenado, qual método de busca é mais eficiente?",
    "alternativas": [
      "Busca linear",
      "Busca binária",
      "Busca recursiva",
      "Busca em profundidade"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Busca Binária"
  },
  {
    "pergunta": "Qual é o comando para ler a entrada do usuário em Python?",
    "alternativas": ["read()", "input()", "scan()", "get()"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Entrada de Dados"
  },
  {
    "pergunta": "O que representa a sigla 'IDE' em programação?",
    "alternativas": [
      "Integrated Development Environment",
      "Integrated Data Environment",
      "Internet Development Engine",
      "Interface Design Environment"
    ],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Ferramentas de Programação – IDE"
  },
  {
    "pergunta": "Qual operador é usado para comparação de igualdade em Python?",
    "alternativas": ["=", "==", "!=", "==="],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Operadores"
  },
  {
    "pergunta": "O que significa 'bug' em um programa?",
    "alternativas": [
      "Um tipo de variável",
      "Um erro ou falha",
      "Uma função específica",
      "Um componente do hardware"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Depuração"
  },
  {
    "pergunta": "Qual das opções é uma linguagem de programação?",
    "alternativas": ["HTML", "CSS", "Python", "SQL"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Programação – Linguagens"
  },
  {
    "pergunta": "Em qual estrutura de controle se utiliza 'while'?",
    "alternativas": ["Repetição", "Condicional", "Função", "Classe"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Lógica de Programação – Loops"
  },
  {
    "pergunta": "Qual dos seguintes não é um tipo primitivo em muitas linguagens?",
    "alternativas": ["Inteiro", "Caractere", "Booleano", "Lista"],
    "dificuldade": "Fácil",
    "resposta": "4",
    "competencia": "Programação – Tipos de Dados"
  },
  {
    "pergunta": "Qual é a saída do seguinte código Python: print(len('OBI'))?",
    "alternativas": ["2", "3", "OBI", "Erro"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Funções de String"
  },
  {
    "pergunta": "Qual estrutura de dados é ideal para acesso rápido por chave?",
    "alternativas": ["Lista", "Fila", "Dicionário", "Conjunto"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Dicionários"
  },
  {
    "pergunta": "Qual é a função do 'return' em uma função?",
    "alternativas": [
      "Finalizar a função",
      "Imprimir o resultado",
      "Retornar um valor",
      "Chamar outra função"
    ],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Programação – Funções"
  },
  {
    "pergunta": "O que é um algoritmo?",
    "alternativas": [
      "Um tipo de software",
      "Um conjunto de instruções para resolver um problema",
      "Um hardware específico",
      "Um formato de dados"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Algoritmos – Conceitos Básicos"
  },
  {
    "pergunta": "Qual é o objetivo da análise de algoritmos?",
    "alternativas": [
      "Melhorar a estética do código",
      "Determinar o desempenho e eficiência de um algoritmo",
      "Converter código em linguagem de máquina",
      "Compilar o código-fonte"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Conceitos Básicos"
  },
  {
    "pergunta": "Qual é a saída do seguinte código: print(10 % 3)?",
    "alternativas": ["1", "3", "0", "2"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Programação – Operadores Aritméticos"
  },
  {
    "pergunta": "Qual método de ordenação é considerado estável?",
    "alternativas": ["QuickSort", "MergeSort", "HeapSort", "SelectionSort"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Ordenação"
  },
  {
    "pergunta": "Qual é o propósito do laço 'for'?",
    "alternativas": [
      "Realizar operações aritméticas",
      "Iterar sobre elementos de uma coleção",
      "Verificar condições lógicas",
      "Criar funções"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Lógica de Programação – Estruturas de Repetição"
  },
  {
    "pergunta": "Em programação, o que significa 'debug'?",
    "alternativas": [
      "Adicionar novos recursos",
      "Corrigir erros",
      "Compilar o código",
      "Otimizar o desempenho"
    ],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Depuração"
  },
  {
    "pergunta": "Qual é o resultado da expressão: 2 + 3 * 4 - 5?",
    "alternativas": ["9", "13", "11", "12"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Matemática Computacional – Operações Aritméticas"
  },
  {
    "pergunta": "Qual é o operador utilizado para exponenciação em Python?",
    "alternativas": ["^", "**", "exp()", "sqrt()"],
    "dificuldade": "Fácil",
    "resposta": "2",
    "competencia": "Programação – Operadores Aritméticos"
  },
  {
    "pergunta": "Em Python, qual a função para converter uma string em inteiro?",
    "alternativas": ["int()", "str()", "float()", "bool()"],
    "dificuldade": "Fácil",
    "resposta": "1",
    "competencia": "Programação – Conversão de Tipos"
  },
  {
    "pergunta": "Qual comando é usado para definir uma função em Python?",
    "alternativas": ["func", "function", "def", "define"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Programação – Declaração de Funções"
  },
  {
    "pergunta": "Qual estrutura é utilizada para armazenar pares chave-valor em Python?",
    "alternativas": ["Lista", "Tupla", "Dicionário", "Conjunto"],
    "dificuldade": "Fácil",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Dicionários"
  },
  {
    "pergunta": "Qual é a complexidade média do algoritmo MergeSort no pior caso?",
    "alternativas": ["O(n)", "O(n log n)", "O(n^2)", "O(log n)"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – MergeSort"
  },
  {
    "pergunta": "Qual algoritmo de ordenação utiliza a estratégia 'dividir para conquistar' e possui complexidade O(n log n) na média?",
    "alternativas": ["BubbleSort", "MergeSort", "InsertionSort", "SelectionSort"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Ordenação"
  },
  {
    "pergunta": "Em programação dinâmica, qual técnica é usada para evitar cálculos redundantes?",
    "alternativas": ["Recursão", "Memorização", "Backtracking", "Força bruta"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação Dinâmica – Otimização"
  },
  {
    "pergunta": "Qual estrutura de dados é mais adequada para implementar uma fila de prioridade?",
    "alternativas": ["Pilha", "Árvore binária", "Heap", "Lista ligada"],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Heap"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo de busca linear em um vetor de n elementos?",
    "alternativas": ["O(1)", "O(n)", "O(log n)", "O(n^2)"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Busca Linear"
  },
  {
    "pergunta": "Qual é o principal objetivo da técnica de backtracking?",
    "alternativas": [
      "Explorar todas as soluções possíveis",
      "Otimizar o uso de memória",
      "Melhorar a velocidade de execução",
      "Evitar a recursão"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Algoritmos – Backtracking"
  },
  {
    "pergunta": "Em um algoritmo de busca binária, o que acontece quando o elemento buscado é menor que o elemento do meio?",
    "alternativas": [
      "Procura na metade superior",
      "Procura na metade inferior",
      "Retorna o elemento",
      "Continua a busca em ambos os lados"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Busca Binária"
  },
  {
    "pergunta": "Qual é a característica principal de um grafo ponderado?",
    "alternativas": [
      "Cada aresta possui uma direção",
      "Cada vértice possui um peso",
      "Cada aresta possui um valor numérico",
      "Não possui ciclos"
    ],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Teoria dos Grafos – Conceitos Básicos"
  },
  {
    "pergunta": "Qual algoritmo é conhecido por encontrar a árvore geradora mínima em um grafo?",
    "alternativas": ["Dijkstra", "Prim", "Floyd-Warshall", "Bellman-Ford"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Árvore Geradora Mínima"
  },
  {
    "pergunta": "Em programação, o que significa 'recursão'?",
    "alternativas": [
      "Chamada de uma função por outra função",
      "Chamada de uma função por ela mesma",
      "Uso de laços de repetição",
      "Implementação de algoritmos iterativos"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Recursão – Conceitos Básicos"
  },
  {
    "pergunta": "Qual é o comportamento do algoritmo BubbleSort no melhor caso?",
    "alternativas": ["O(n)", "O(n log n)", "O(n^2)", "O(1)"],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Análise de Algoritmos – Ordenação"
  },
  {
    "pergunta": "Em um problema de otimização, qual técnica geralmente é aplicada para reduzir o tempo de execução?",
    "alternativas": ["Força bruta", "Programação dinâmica", "Algoritmos gulosos", "Busca exaustiva"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação Dinâmica – Otimização"
  },
  {
    "pergunta": "Qual estrutura de dados permite acesso direto aos seus elementos através de um índice?",
    "alternativas": ["Lista ligada", "Vetor", "Pilha", "Árvore"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Vetores"
  },
  {
    "pergunta": "Qual é a principal característica de um algoritmo guloso?",
    "alternativas": [
      "Sempre encontra a solução ótima global",
      "Faz escolhas locais com a esperança de encontrar uma solução ótima",
      "Utiliza recursão intensivamente",
      "Resolve todos os subproblemas"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos – Estratégia Gulosa"
  },
  {
    "pergunta": "Qual técnica é utilizada para percorrer todos os vértices de um grafo de forma ordenada?",
    "alternativas": ["DFS", "BFS", "Backtracking", "Recursão"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – BFS"
  },
  {
    "pergunta": "Qual é a vantagem da implementação recursiva sobre a iterativa em certos problemas?",
    "alternativas": ["Maior eficiência", "Código mais simples e legível", "Menor uso de memória", "Evita stack overflow"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Recursão – Vantagens e Desvantagens"
  },
  {
    "pergunta": "Qual é a saída do código: print('OBI'.lower())?",
    "alternativas": ["obi", "OBI", "Obi", "oBI"],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Programação – Manipulação de Strings"
  },
  {
    "pergunta": "Em qual situação o uso de um dicionário é mais vantajoso?",
    "alternativas": [
      "Quando a ordem dos elementos é importante",
      "Quando se precisa de acesso rápido por chave",
      "Quando os elementos são apenas números",
      "Quando se utiliza apenas iteração"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Dicionários"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo MergeSort no pior caso?",
    "alternativas": ["O(n)", "O(n log n)", "O(n^2)", "O(log n)"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – MergeSort"
  },
  {
    "pergunta": "Qual estrutura é melhor para representar um grafo esparso?",
    "alternativas": ["Matriz de adjacência", "Lista de adjacência", "Vetor", "Heap"],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Representação"
  },
  {
    "pergunta": "Em um problema de busca, qual é a vantagem da busca binária sobre a busca linear?",
    "alternativas": [
      "Menor complexidade",
      "Maior simplicidade de implementação",
      "Menor uso de memória",
      "Funciona em qualquer tipo de vetor"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Análise de Algoritmos – Busca Binária"
  },
  {
    "pergunta": "Qual dos seguintes é um problema clássico resolvido com programação dinâmica?",
    "alternativas": ["Problema da mochila", "Problema do caixeiro viajante", "Busca em profundidade", "Ordenação por seleção"],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Programação Dinâmica – Problemas Clássicos"
  },
  {
    "pergunta": "Qual é o objetivo do algoritmo de Floyd-Warshall?",
    "alternativas": [
      "Encontrar a árvore geradora mínima",
      "Encontrar o caminho mínimo entre todos os pares de vértices",
      "Ordenar um vetor",
      "Calcular o número de componentes conexos"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Algoritmo de Floyd-Warshall"
  },
  {
    "pergunta": "Em algoritmos gulosos, qual é o critério para selecionar a solução local?",
    "alternativas": [
      "Soma dos elementos",
      "Critério de optimalidade local",
      "Escolha aleatória",
      "Divisão igualitária"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Algoritmos – Estratégia Gulosa"
  },
  {
    "pergunta": "Qual é a principal função do algoritmo de Kruskal?",
    "alternativas": [
      "Ordenar um vetor",
      "Encontrar a árvore geradora mínima",
      "Buscar um elemento em uma lista",
      "Calcular a média de números"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Árvore Geradora Mínima"
  },
  {
    "pergunta": "Qual técnica é utilizada para resolver problemas de contagem em combinatória?",
    "alternativas": ["Programação dinâmica", "Backtracking", "Análise combinatória", "Busca binária"],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Matemática Computacional – Combinatória"
  },
  {
    "pergunta": "Qual é a principal característica de um algoritmo recursivo?",
    "alternativas": [
      "Chama a si mesmo para resolver subproblemas",
      "Utiliza apenas laços iterativos",
      "Depende de estruturas de dados avançadas",
      "Não pode ser otimizado"
    ],
    "dificuldade": "Média",
    "resposta": "1",
    "competencia": "Recursão – Conceitos Básicos"
  },
  {
    "pergunta": "Em um vetor ordenado, qual é o melhor caso para a busca binária?",
    "alternativas": ["Elemento no início", "Elemento no final", "Elemento no meio", "Elemento ausente"],
    "dificuldade": "Média",
    "resposta": "3",
    "competencia": "Análise de Algoritmos – Busca Binária"
  },
  {
    "pergunta": "Qual é a estratégia principal do algoritmo de ordenação HeapSort?",
    "alternativas": [
      "Dividir o vetor em partes iguais",
      "Construir uma heap para extrair o maior elemento repetidamente",
      "Utilizar recursão para ordenar subvetores",
      "Fazer múltiplas passagens no vetor"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – HeapSort"
  },
  {
    "pergunta": "Qual é o efeito do uso de 'pass' em Python dentro de uma função?",
    "alternativas": [
      "Termina a execução da função",
      "Define um bloco vazio sem ação",
      "Imprime uma mensagem",
      "Interrompe o laço de repetição"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação – Estruturas de Controle"
  },
  {
    "pergunta": "Em programação, o que é 'aliasing'?",
    "alternativas": [
      "Atribuição de um nome a uma função",
      "Várias variáveis referenciando o mesmo objeto",
      "Criação de cópias de dados",
      "Utilização de bibliotecas externas"
    ],
    "dificuldade": "Média",
    "resposta": "2",
    "competencia": "Programação – Conceitos de Memória"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo de multiplicação de matrizes ingênuo?",
    "alternativas": ["O(n^2)", "O(n^3)", "O(n log n)", "O(n)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Multiplicação de Matrizes"
  },
  {
    "pergunta": "Em programação dinâmica, qual é a diferença entre memoization e tabulation?",
    "alternativas": [
      "Memoization é iterativa, tabulation é recursiva",
      "Memoization armazena resultados durante a recursão, tabulation utiliza uma tabela preenchida iterativamente",
      "Ambas são idênticas",
      "Tabulation é usada somente em grafos"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Programação Dinâmica – Técnicas"
  },
  {
    "pergunta": "Qual problema clássico tem como solução a fórmula de Catalan?",
    "alternativas": [
      "Problema do caixeiro viajante",
      "Número de árvores binárias",
      "Problema da mochila",
      "Caminho mínimo em grafos"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Matemática Computacional – Catalan"
  },
  {
    "pergunta": "Qual é a abordagem principal para resolver o Problema da Subsequência Comum Máxima?",
    "alternativas": [
      "Algoritmo guloso",
      "Programação dinâmica",
      "Backtracking",
      "Divisão e conquista"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Programação Dinâmica – Sequência Comum"
  },
  {
    "pergunta": "Em um grafo, qual é a complexidade de encontrar todos os caminhos simples entre dois vértices?",
    "alternativas": ["Exponencial", "Linear", "Polinomial", "Logarítmica"],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Teoria dos Grafos – Caminhos Simples"
  },
  {
    "pergunta": "Qual é o problema NP-completo clássico relacionado à coloração de grafos?",
    "alternativas": [
      "Problema do Clique",
      "Problema da Soma de Subconjuntos",
      "Coloração de Grafos",
      "Problema da Partição"
    ],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Teoria dos Grafos – Problemas NP-completos"
  },
  {
    "pergunta": "Qual técnica é utilizada para reduzir a complexidade de algoritmos recursivos através da eliminação de chamadas redundantes?",
    "alternativas": [
      "Divisão e conquista",
      "Memorização",
      "Heurística",
      "Algoritmo guloso"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Recursão – Otimização"
  },
  {
    "pergunta": "No contexto de estruturas de dados, o que caracteriza uma árvore AVL?",
    "alternativas": [
      "Árvore com balanceamento automático",
      "Árvore não binária",
      "Árvore sem folhas",
      "Árvore com inserção apenas no fim"
    ],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Estruturas de Dados – Árvores Balanceadas"
  },
  {
    "pergunta": "Qual é a complexidade de inserir um elemento em uma heap binária?",
    "alternativas": ["O(1)", "O(log n)", "O(n)", "O(n log n)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Heap"
  },
  {
    "pergunta": "Qual é o tempo de execução do algoritmo de Dijkstra utilizando uma fila de prioridade implementada com heap?",
    "alternativas": ["O(n)", "O(n log n)", "O(n^2)", "O(n + m)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Algoritmo de Dijkstra"
  },
  {
    "pergunta": "Em algoritmos de ordenação, qual técnica é usada para evitar a pior complexidade do QuickSort?",
    "alternativas": [
      "Escolha aleatória do pivô",
      "Dividir e conquistar",
      "Uso de recursão",
      "Algoritmo iterativo"
    ],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Análise de Algoritmos – QuickSort"
  },
  {
    "pergunta": "Qual abordagem é geralmente utilizada para resolver problemas de caminhos mínimos em grafos com arestas de pesos negativos?",
    "alternativas": ["Dijkstra", "Bellman-Ford", "Floyd-Warshall", "A*"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Caminho Mínimo"
  },
  {
    "pergunta": "Qual é a principal limitação da recursão em linguagens sem otimização de cauda?",
    "alternativas": [
      "Memória insuficiente",
      "Baixo desempenho",
      "Stack overflow",
      "Difícil depuração"
    ],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Recursão – Limitações"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo de Karatsuba para multiplicação de números grandes?",
    "alternativas": ["O(n^2)", "O(n^(log2 3))", "O(n log n)", "O(n)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Multiplicação de Números"
  },
  {
    "pergunta": "Em problemas de otimização, qual é a principal característica dos algoritmos de aproximação?",
    "alternativas": [
      "Garantem a solução ótima",
      "São exatos",
      "Fornecem soluções próximas ao ótimo em tempo polinomial",
      "Utilizam recursão intensiva"
    ],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Algoritmos – Aproximação"
  },
  {
    "pergunta": "Qual é o problema clássico resolvido pelo algoritmo de Euclides?",
    "alternativas": [
      "Cálculo do MMC",
      "Cálculo do MDC",
      "Resolução de equações lineares",
      "Multiplicação de matrizes"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Matemática Computacional – Algoritmo de Euclides"
  },
  {
    "pergunta": "Qual é a vantagem de usar uma estrutura de dados Trie?",
    "alternativas": [
      "Busca rápida por prefixo",
      "Armazenamento compacto de números",
      "Operações aritméticas eficientes",
      "Melhor desempenho em ordenação"
    ],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Estruturas de Dados – Trie"
  },
  {
    "pergunta": "Qual é a complexidade da busca em uma Trie?",
    "alternativas": ["O(n)", "O(m)", "O(1)", "O(log n)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Estruturas de Dados – Trie"
  },
  {
    "pergunta": "Qual algoritmo é utilizado para encontrar componentes fortemente conexos em um grafo?",
    "alternativas": ["Algoritmo de Kosaraju", "Algoritmo de Prim", "Busca em profundidade", "Algoritmo de Dijkstra"],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Teoria dos Grafos – Componentes Fortemente Conexos"
  },
  {
    "pergunta": "Qual é o conceito central na técnica de 'divide and conquer'?",
    "alternativas": [
      "Resolver o problema inteiro de uma vez",
      "Dividir o problema em subproblemas menores, resolvê-los e combinar os resultados",
      "Utilizar recursão sem base de parada",
      "Iterar sobre os elementos"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Algoritmos – Divisão e Conquista"
  },
  {
    "pergunta": "Qual é o tempo de execução do algoritmo de ordenação por contagem (Counting Sort)?",
    "alternativas": ["O(n)", "O(n+k)", "O(n log n)", "O(n^2)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Ordenação"
  },
  {
    "pergunta": "Qual é a característica do algoritmo de ordenação Radix Sort?",
    "alternativas": [
      "Baseia-se em comparação direta",
      "Ordena dígito a dígito",
      "Utiliza recursão para dividir o vetor",
      "É um algoritmo de ordenação in-place"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Ordenação"
  },
  {
    "pergunta": "Em algoritmos recursivos, o que é o 'caso base'?",
    "alternativas": [
      "A condição que termina a recursão",
      "A parte recursiva do algoritmo",
      "A condição que causa a chamada recursiva",
      "A inicialização da função"
    ],
    "dificuldade": "Difícil",
    "resposta": "1",
    "competencia": "Recursão – Conceitos Básicos"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo de Strassen para multiplicação de matrizes?",
    "alternativas": ["O(n^3)", "O(n^(log2 7))", "O(n^2)", "O(n log n)"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Análise de Algoritmos – Multiplicação de Matrizes"
  },
  {
    "pergunta": "Qual é a principal aplicação do algoritmo de busca A*?",
    "alternativas": [
      "Ordenação de dados",
      "Caminho mínimo em mapas com heurísticas",
      "Cálculo de primos",
      "Multiplicação de grandes números"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – Algoritmo A*"
  },
  {
    "pergunta": "Qual estrutura de dados é utilizada para implementar o algoritmo de busca em profundidade (DFS) de forma iterativa?",
    "alternativas": ["Fila", "Pilha", "Dicionário", "Conjunto"],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Teoria dos Grafos – DFS"
  },
  {
    "pergunta": "Em problemas de otimização, qual é a estratégia principal dos algoritmos gulosos?",
    "alternativas": [
      "Considerar todas as possibilidades",
      "Escolher a melhor opção localmente em cada etapa",
      "Dividir o problema em subproblemas independentes",
      "Utilizar recursão profunda"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Algoritmos – Estratégia Gulosa"
  },
  {
    "pergunta": "Qual é a complexidade do algoritmo de ordenação ShellSort na média?",
    "alternativas": ["O(n)", "O(n log n)", "Entre O(n) e O(n^2)", "O(n^2)"],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Análise de Algoritmos – Ordenação"
  },
  {
    "pergunta": "Em problemas envolvendo árvores, qual é a técnica usada para percorrer todos os nós em pré-ordem?",
    "alternativas": ["In-ordem", "Pós-ordem", "Pré-ordem", "Nível a nível"],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Árvores"
  },
  {
    "pergunta": "Qual é a principal diferença entre uma árvore binária de busca e uma árvore binária completa?",
    "alternativas": [
      "Ordem dos nós",
      "Balanceamento dos nós",
      "Número de nós por nível",
      "Tipo de dados armazenados"
    ],
    "dificuldade": "Difícil",
    "resposta": "3",
    "competencia": "Estruturas de Dados – Árvores"
  },
  {
    "pergunta": "Qual é o método utilizado para encontrar a solução de equações diferenciais parciais utilizando a técnica de diferenças finitas?",
    "alternativas": [
      "Método de Newton",
      "Método de Gauss-Seidel",
      "Transformada de Fourier",
      "Método dos Elementos Finitos"
    ],
    "dificuldade": "Difícil",
    "resposta": "2",
    "competencia": "Matemática Computacional – Equações Diferenciais"
  }
]
